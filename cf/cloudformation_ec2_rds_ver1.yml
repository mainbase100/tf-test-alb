AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation Training For RDS

Parameters:
  RDSMasterUsername:
    Type: String
    Description: The database admin account name
    Default: admin
    MinLength: 1
    MaxLength: 16
    AllowedPattern: '^[a-zA-Z0-9]*' 
  RDSMasterUserPassword:
    Type: String
    Description: The database admin account password
    MinLength: 8
    AllowedPattern: '^[a-zA-Z0-9]*$' 
    NoEcho: true
  RDSDBName:
    Type: String
    Description: The database name
    Default: test_db
    MinLength: 1
    MaxLength: 16
    AllowedPattern: '^[a-zA-Z0-9_]*$' 

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Input parameters
        Parameters:
          - RDSMasterUsername
          - RDSMasterUserPassword
          - RDSDBName

Resources:
  MyEC2SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security Group for EC2 instance
      SecurityGroupEgress: 
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      VpcId: vpc-01ca4331d5d9518b4 #awsコンソールで作成したVPCを入力

  MyRDSSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security Group for RDS instance
      SecurityGroupEgress: 
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref MyEC2SecurityGroup
      VpcId: vpc-01ca4331d5d9518b4 #awsコンソールで作成したVPCを入力

  MyEC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: ami-01ae6169b82b38e3b
      InstanceType: t2.micro
      KeyName: aws-test
      NetworkInterfaces:
        - AssociatePublicIpAddress: 'true'
          DeviceIndex: '0'
          SubnetId: subnet-0e1c50a60b05cbd33 #awsコンソールで作成したsubnetを入力
          GroupSet:
            - !Ref MyEC2SecurityGroup
      UserData: !Base64 |
        #!/bin/bash
        dnf update -y
        dnf remove -y mariadb-libs
        dnf install -y yum-utils
        dnf -y localinstall https://dev.mysql.com/get/mysql80-community-release-el9-1.noarch.rpm
        dnf install -y mysql-community-client
      Tags:
        - Key: Name
          Value: RDSConnect

  MyRDSInstance:
    Type: AWS::RDS::DBInstance
    Properties: 
      AllocatedStorage: 20
      DBInstanceClass: db.t3.micro
      DBInstanceIdentifier: training-db-instance
      DBSubnetGroupName: database-subnets
      Engine: mysql
      MasterUsername: !Ref RDSMasterUsername
      MasterUserPassword: !Ref RDSMasterUserPassword
      DBName: !Ref RDSDBName
      StorageType: gp3
      MultiAZ: true
      Tags:
        - Key: Name
          Value: StudyRDSInstance
      VPCSecurityGroups: 
        - !Ref MyRDSSecurityGroup

Outputs:
  RDSEndpoint:
    Value: !GetAtt MyRDSInstance.Endpoint.Address

  RDSUsername:
    Value: !Ref RDSMasterUsername

  RDSDBName:
    Value: !Ref RDSDBName